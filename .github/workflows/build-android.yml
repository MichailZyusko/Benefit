#name: Build android-app && add to GitHub artifacts
#
#on:
#  push:
#    branches:
#      - main
#  pull_request:
#    branches:
#      - main
#
#jobs:
#  build:
#    name: Build
#    runs-on: ubuntu-latest
#    defaults:
#     run:
#      working-directory: ./mobile
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Setup Node JS
#        uses: actions/setup-node@master
#
#      # - name: set up JDK 1.8
#      #   uses: actions/setup-java@v1
#      #   with:
#      #    java-version: 1.8
#
#      - name: Install dependencies
#        run: npm install --force
#
#      # - name: Build android
#      #   run: npm run cd android && ./gradlew assembleDebug
#
#      - name: Cache Gradle Wrapper
#        uses: actions/cache@v2
#        with:
#          path: ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
#
#      - name: Cache Gradle Dependencies
#        uses: actions/cache@v2
#        with:
#          path: ~/.gradle/caches
#          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-caches-
#
#      - name: Make Gradlew Executable
#        run: cd android && chmod +x ./gradlew
#
#      - name: Build Android App Bundle
#        run: |
#          cd android && ./gradlew bundleRelease --no-daemon
#
#      - name: Sign App Bundle
#        id: sign_app
#        uses: r0adkll/sign-android-release@v1
#        with:
#          releaseDirectory: android/app/build/outputs/bundle/release
#          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
#          alias: ${{ secrets.ANDROID_SIGNING_ALIAS }}
#          keyStorePassword: ${{ secrets.ANDROID_SIGNING_STORE_PASSWORD }}
#          keyPassword: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}
#
#      - name: Upload Artifact
#        uses: actions/upload-artifact@v2
#        with:
#          name: Benefit
#          path: ${{steps.sign_app.outputs.signedReleaseFile}}

#name: Build android-app && add create GitHub releases
#on:
#  push:
#    branches: [ main ]
#
#jobs:
#  build-android-apk:
#    runs-on: ubuntu-latest
#    defaults:
#      run:
#        working-directory: ./mobile
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Install npm dependencies
#        run: npm ci --force
#
#      - name: Make-gradlew-executable
#        run: cd android && chmod +x ./gradlew
#
#      - name: Build-android-debug
#        run: |
#          npx react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res
#          cd android && ./gradlew assembleDebug
#
#      - name: Create-release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Release ${{ github.ref }}
#          draft: false
#          prerelease: false
#          body: |
#            ## Release Notes
#              `${{ github.event.head_commit.message }}`
#
#      - name: Upload-release-asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ github.token }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: /home/runner/work/Benefit/Benefit/mobile/android/app/build/outputs/apk/debug/app-debug.apk
#          asset_name: Benefit.apk
#          asset_content_type: application/vnd.android.package-archive
#
#  notify-telegram:
#    needs: build-android
#    runs-on: ubuntu-latest
#    steps:
#      - name: Send-telegram-message-on-new-app-build
#        uses: appleboy/telegram-action@master
#        with:
#          to: ${{ secrets.TELEGRAM_TO }}
#          token: ${{ secrets.TELEGRAM_TOKEN }}
#          disable_web_page_preview: true
#          format: html
#          message: |
#            ðŸŽ‰ðŸŽ‰ðŸŽ‰ <b>Finally!</b> ðŸŽ‰ðŸŽ‰ðŸŽ‰
#            Guys, a new version of the app is already available.Check this out!
#
#            <b>Version:</b> ${{ github.ref }}
#            <b>Main changes:</b>
#              <code>${{github.event.head_commit.message}}</code>
#
#            <b>Download for:</b>
#             - ðŸ¤– <a href="https://github.com/MichailZyusko/Benefit/releases/download/${{ github.ref }}/Benefit.apk">Android</a>
#             - ðŸ“± <a href="https://http.cat/404">iOS</a>!


name: Build android-app && add create GitHub releases
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-android-apk:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./mobile
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Build release APK and AAB after test
        run: |
           ./gradlew assembleRelease

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: Benefit.apk
          path: app/build/outputs/apk/release/app-release-unsigned.apk
#      - name: Make-gradlew-executable
#        run: cd android && chmod +x ./gradlew

#      - name: Build-android-debug
#        run: |
#          npx react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res
#          cd android && ./gradlew assembleDebug

#      - name: Create-release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Release ${{ github.ref }}
#          draft: false
#          prerelease: false
#          body: |
#            ## Release Notes
#              `${{ github.event.head_commit.message }}`
#
#      - name: Upload-release-asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ github.token }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: /home/runner/work/Benefit/Benefit/mobile/android/app/build/outputs/apk/debug/app-debug.apk
#          asset_name: Benefit.apk
#          asset_content_type: application/vnd.android.package-archive

#  notify-telegram:
#    needs: build-android
#    runs-on: ubuntu-latest
#    steps:
#      - name: Send-telegram-message-on-new-app-build
#        uses: appleboy/telegram-action@master
#        with:
#          to: ${{ secrets.TELEGRAM_TO }}
#          token: ${{ secrets.TELEGRAM_TOKEN }}
#          disable_web_page_preview: true
#          format: html
#          message: |
#            ðŸŽ‰ðŸŽ‰ðŸŽ‰ <b>Finally!</b> ðŸŽ‰ðŸŽ‰ðŸŽ‰
#            Guys, a new version of the app is already available.Check this out!
#
#            <b>Version:</b> ${{ github.ref }}
#            <b>Main changes:</b>
#              <code>${{github.event.head_commit.message}}</code>
#
#            <b>Download for:</b>
#             - ðŸ¤– <a href="https://github.com/MichailZyusko/Benefit/releases/download/${{ github.ref }}/Benefit.apk">Android</a>
#             - ðŸ“± <a href="https://http.cat/404">iOS</a>!
